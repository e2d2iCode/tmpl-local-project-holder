# Templates for repositories' standard elements

<div style="min-width: 45em; font-size: normal; margin: 0 10% 5ex 5%;">
<div style="font-size: 95%; text-align: justify;">

!!!Abstract
    *This folder contains templates for the files commonly found in
    **`repositories`**, namely `SECURITY.md`, `CODE_OF_CONDUCT.md` and `CHANGELOG.md`.
    The needed replacements, if any, are indicated by placeholders as all-capitals words surrounded
    by a pair of double `@` symbols, like`@@PLACEHOLDER@@`.*

</div></div>

## Overview

This folder contains templates for the files other than the lcommonly found in repositories, namely `SECURITY.md`, `CODE_OF_CONDUCT.md` and `CHANGELOG.md`. Note that both the license and the readme files are not included here as they are handled in their own folders. More information about each of the templates provided here is given in the following sections.

## Changelog template

The changelog template is a markdown file that contains the skeleton structure of a changelog and a model to be used to create new entries. It is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) and assumes that the `v2.0.0` [Semver](https://semver.org/spec/v2.0.0.htmlspec/v2.0.0.html) specifications are used to version the project. It requires the following fields to be updated:

- `<vers>`: the version number, e.g. `v0.1.0`
- `<yyy-mm-dd>`: the date of the release, e.g. `2021-01-01`
- `<this>`: the version that the changelog entry refers to, e.g. `v1.4.3` or `HEAD`
- `<to-that>`: the version to compare to e.g. `v1.3.0` or *nothing* for the first release
- `<repo-url>`: the URL of the repository, e.g. `https://github.com/e2d2ipi/tmpl-local-project-holder/`

<div style="min-width: 45em; font-size: normal; margin: 0 10% 5ex 5%;">

!!!Hint
    Recall that, according to the Semver specifications, the `v0.X.Y` versions are meant to be used for the initial development phase, and that the first release should be `v1.0.0`.

</div>

As is, the templatee already contains a section for the `v0.0.0` version, which is meant to refer to the initial commit, and a newer section labeled `Unreleased` ready to be fed with the changes to be included in the next release. The latter section is meant to be updated as the project evolves, and the former is meant to be updated only once, when the project is first released.
